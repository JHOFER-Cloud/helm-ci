name: Build, Test and Release

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"
          cache: true

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test ./... -v

  release:
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm install -g semantic-release @semantic-release/changelog @semantic-release/git

      - name: Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version=$(semantic-release --dry-run | grep "next release version is" | sed -E 's/.* ([0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.]+)?).*/\1/')
          if [ ! -z "$version" ]; then
            echo "version=$version" >> $GITHUB_OUTPUT
            semantic-release
          fi
      - name: Login to GitHub Container Registry
        if: steps.semantic_release.outputs.version != ''
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        if: steps.semantic_release.outputs.version != ''
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/jhofer-cloud/helm-ci:${{ steps.semantic_release.outputs.version }}
            ${{ github.ref == 'refs/heads/main' && format('ghcr.io/jhofer-cloud/helm-ci:latest') || '' }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.version=${{ steps.semantic_release.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
