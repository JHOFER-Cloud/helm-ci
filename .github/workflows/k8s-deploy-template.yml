name: Reusable Kubernetes Deploy

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      helm_repository:
        required: false
        type: string
      helm_chart:
        required: false
        type: string
      helm_version:
        required: false
        type: string
      values_path:
        required: false
        type: string
        default: "helm/values"
      ingress_domain:
        required: true
        type: string
    secrets:
      KUBE_CONFIG_DEV:
        required: true
      KUBE_CONFIG_LIVE:
        required: true

jobs:
  deploy:
    runs-on: self-hosted-ubuntu-22.04
    environment: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'Production' || 'Development' }}
    container:
      image: ghcr.io/jhofer-cloud/helm-ci:latest

    steps:
      - name: Set deployment variables
        id: vars
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "stage=live" >> $GITHUB_OUTPUT
            echo "env=Production" >> $GITHUB_OUTPUT
          else
            echo "stage=dev" >> $GITHUB_OUTPUT
            echo "env=Development" >> $GITHUB_OUTPUT
          fi

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Kubernetes Tools
        uses: yokawasa/action-setup-kube-tools@v0.11.2
        with:
          kubectl: "1.27.3"
          helm: "3.12.3"

      - name: Setup Kubeconfig
        run: |
          mkdir -p ~/.kube
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "${{ secrets.KUBE_CONFIG_LIVE }}" > ~/.kube/config
          else
            echo "${{ secrets.KUBE_CONFIG_DEV }}" > ~/.kube/config
          fi
          chmod 600 ~/.kube/config

      - name: Run deployment
        id: deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          deploy \
            --stage ${{ steps.vars.outputs.stage }} \
            --app ${{ inputs.app_name }} \
            --env ${{ steps.vars.outputs.env }} \
            --pr ${{ github.event.pull_request.number }} \
            --values ${{ inputs.values_path }} \
            --chart ${{ inputs.helm_chart }} \
            --version ${{ inputs.helm_version }} \
            --repo ${{ inputs.helm_repository }} \
            --domain ${{ inputs.ingress_domain }} \

      - name: Create deployment status
        uses: chrnorm/deployment-action@v2
        if: success()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment-url: ${{ steps.deploy.outputs.url }}
          environment: ${{ steps.vars.outputs.env }}

      - name: Cleanup Kubeconfig
        if: always()
        run: rm -f ~/.kube/config
